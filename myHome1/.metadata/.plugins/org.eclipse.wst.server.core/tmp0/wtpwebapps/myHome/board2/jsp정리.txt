scope - 사용범위
1. page		: 현재 page만 유효
2. request	: 두개의 page에서 유효
3. session		: 브라우져에서 유효
4. application	: 서버에서 유효

session과 Cookie
 - session : 서버에 정보 저장
   - 저장하기 : void  setAttribute("키", "값")
   - 꺼내오기 : Object  getAttribute("키")
   - 삭제하기 : void  removeAttibute("키")
   - 전체삭제하기 : void  invalidate()

 - Cookie : 클라이언트에 정보 저장
   - 내장객체가 아니다. 사용자가 직접 객체를 선언해서 사용한다
   - 생성하기 : Cookie ck = new Cookie("이름", "값");
   - 시간설정 : void setMaxAge(초);//초는 int값을 넣어준다
                   cf) 삭제하기 : void setMaxAge(0)
   - 꺼내오기 : Cookie[] cks = request.getCookies();
   - cks의 이름 찾기 : String name = cks[i].getName();
   - cks의 값 찾기 : String value = cks[i].getValue();

jsp에서 java코드 사용하기
 - <%! ~~ %> : declaration(선언문)
    - 메소드를 정의, 멤버필드값 정의
 - <% ~~ %>  : scriptlet
    - _jspService()메소드 안에 사용되는 java code
 - <%= ~ %>  : expression(표현식)
   - java의 결과값을 html상에 동일하게 나타내게 하는 code

page이동 방법
 - 자바코드로 이동 : response.sendRedirect("이동할페이지")
 - javascript : location.href="이동할페이지"
                   history.back(), history.go(index)
 - html : a태그 - <a href="이동할페이지">???</a>
 - jsp 이동 : 
   - <jsp:forward page="이동할페이지" />
   - <jsp:include page="이동할페이지" />

내장객체 - jsp파일을 servlet파일로 바꿀때 필요한 객체를
내부적으로 미리 선언해서 사용하는 것










