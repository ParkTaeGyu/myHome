/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-02-16 06:21:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import my.board.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/board/../bottom.jsp", Long.valueOf(1547881474880L));
    _jspx_dependants.put("/board/../top.jsp", Long.valueOf(1550298056876L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("my.board");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!-- list.jsp -->\r\n");
      my.board.BoardDataBean dao = null;
      dao = (my.board.BoardDataBean) _jspx_page_context.getAttribute("dao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (dao == null){
        dao = new my.board.BoardDataBean();
        _jspx_page_context.setAttribute("dao", dao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<title>홈페이지</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"> \t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tfunction checkMember(){\r\n");
      out.write("\t\t\twindow.open(\"");
      out.print(request.getContextPath());
      out.write("/member/memberSsn.jsp\", \"checkMember\", \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"width=640, height=400\")\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");

		String mbId = (String)session.getAttribute("mbId");
		boolean isLogin = false;
		if (mbId != null) isLogin = true;

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<table border=\"1\" width=\"800\" height=\"600\">\r\n");
      out.write("\t\t\t<tr height=\"10%\">\r\n");
      out.write("\t\t\t\t<td align=\"center\" colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/index.jsp\">메인</a> | \r\n");
			if (isLogin){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/login/logout.jsp\">로그아웃</a> |\r\n");
			}else { 
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/login/login.jsp\">로그인</a> |\r\n");
			} 
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t<a href=\"c\">회원가입</a> | \r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/member/memberAll.jsp\">회원보기</a> | \r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/member/memberAll.jsp?mode=find\">회원찾기</a> |\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/board/list.jsp\">게시판</a> |\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/board2/list.jsp\">자료실</a> | \r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/company.jsp\">회사소개</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr height=\"80%\">\r\n");
      out.write("\t\t\t\t<td width=\"20%\" valign=\"top\">\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/count/count.jsp", out, false);
      out.write("<br>\r\n");
		if (isLogin){ 
      out.write("\r\n");
      out.write("\t\t\t\t아이디 [");
      out.print(mbId);
      out.write("]님이 로그인 중 \r\n");
		}else { 
      out.write("\r\n");
      out.write("\t\t\t\t로그인을 해 주세요\r\n");
		} 
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td width=\"80%\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../style.css\">\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("\t<b>글 목 록</b>\r\n");
      out.write("\t<table border=\"0\" width=\"90%\">\r\n");
      out.write("\t\t<tr bgcolor=\"yellow\">\r\n");
      out.write("\t\t\t<td align=\"right\"><a href=\"writeForm.jsp\">글쓰기</a></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<table border=\"1\" width=\"90%\">\r\n");
      out.write("\t\t<tr bgcolor=\"green\">\r\n");
      out.write("\t\t\t<th>번호</th>\r\n");
      out.write("\t\t\t<th width=\"40%\">제목</th>\r\n");
      out.write("\t\t\t<th>작성자</th>\r\n");
      out.write("\t\t\t<th>작성일</th>\r\n");
      out.write("\t\t\t<th>조회</th>\r\n");
      out.write("\t\t\t<th>IP</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<!-- DB에 접속해서 데이타를 받아와 출력하기 -->\r\n");

		String pageNum = request.getParameter("pageNum");
		if (pageNum==null) {
			pageNum="1";
		}
		int pageSize = 5;
		int currentPage = Integer.parseInt(pageNum);
		int startRow = (currentPage-1) * pageSize + 1;
		int endRow = startRow + pageSize -1;
		int dbRow = dao.getCount();
		if (endRow>dbRow) endRow = dbRow;
 		int number = dbRow - (currentPage-1)*pageSize;

 		List<BoardDBBean> listBoard = dao.listBoard(startRow, endRow);
		if (listBoard == null || listBoard.size()==0){
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"6\">게시된 글이 없습니다.</td>\r\n");
      out.write("\t\t</tr>\t\t\r\n");
	}else {
			for(BoardDBBean dto : listBoard){
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>");
      out.print(number--);
      out.write("</td>\r\n");
      out.write("\t\t\t<td>\r\n");
	if (dto.getRe_level()>0){ 
      out.write("\r\n");
      out.write("\t\t\t<img src=\"../img/level.gif\" \r\n");
      out.write("\t\t\t\t\twidth=\"");
      out.print(dto.getRe_level()*10);
      out.write("\">\r\n");
      out.write("\t\t\t<img src=\"../img/re.gif\">\r\n");
	} 
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<a href=\"content.jsp?num=");
      out.print(dto.getNum());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t");
      out.print(dto.getSubject());
      out.write("\r\n");
      out.write("\t\t\t\t</a>\r\n");
	if (dto.getReadcount()>10){ 
      out.write("\r\n");
      out.write("\t\t\t<img src=\"../img/hot.gif\">\r\n");
	}
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dto.getWriter());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dto.getReg_date());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dto.getReadcount());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dto.getIp());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\t\t\r\n");
		}
		}
      out.write("\r\n");
      out.write("\t</table>\r\n");

		if (dbRow>0){
			int pageBlock = 3;
			int dbPage = (dbRow-1) / pageSize + 1;
			int startPage = ((currentPage-1)/pageBlock*pageBlock)+1;
			//currentpage : 123 -> 0
			//currentPage : 456 -> 3
			//currentPage : 789 -> 6
			int endPage = startPage + pageBlock - 1;
			if (endPage>dbPage) endPage = dbPage;
			if (startPage>pageBlock){
      out.write("\r\n");
      out.write("\t\t\t\t[<a href=\"list.jsp?pageNum=");
      out.print(startPage-pageBlock);
      out.write("\">이전</a>]\t\t\t\r\n");
		}
			for(int i=startPage; i<=endPage; ++i){
      out.write("\r\n");
      out.write("\t\t\t\t[<a href=\"list.jsp?pageNum=");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</a>]\r\n");
		}
			if (endPage < dbPage){
      out.write("\r\n");
      out.write("\t\t\t\t[<a href=\"list.jsp?pageNum=");
      out.print(startPage+pageBlock);
      out.write("\">다음</a>]\t\t\t\r\n");
		}
		}		

      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr height=\"10%\">\r\n");
      out.write("\t\t\t\t<td colspan=\"2\" align=\"center\">2019년 1월 주말 JSP 수업</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
